# name: SonarCloud Analysis

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     types: [opened, synchronize, reopened]
# jobs:
#   sonarqube:
#     name: SonarQube
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4
#         with:
#           fetch-depth: 0  
#       - name: SonarQube Scan
#         uses: SonarSource/sonarqube-scan-action@v5
#         env:
#           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

#       - name: Notify Slack if SonarQube fails
#         run: |
#           curl -X POST -H 'Content-type: application/json' \
#           --data '{"text":"‚ùå *SonarQube scan failed* on PR #${{ github.event.pull_request.number }} in `${{ github.repository }}`"}' \
#           ${{ secrets.SLACK_WEBHOOK_URL }}
name: Slack Notification Test

on:
  push:
    branches: [main]

jobs:
  send-message:
    runs-on: ubuntu-latest
    steps:
      - name: Test Slack Message
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"üîî *Manual Slack test from GitHub Actions!*"}' \
          ${{ secrets.SLACK_WEBHOOK_URL }}